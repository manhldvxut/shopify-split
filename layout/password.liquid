<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}">
<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, height=device-height, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="IE=edge"> 

	{% if settings.favicon_image %}
		<link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png" />
	{% endif %}

	<title>{{ shop.name | escape }}</title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

	{%- render 'open-graph' -%}

	<link rel="canonical" href="{{ canonical_url }}">

  <link rel="preconnect" href="https://cdn.shopify.com">
  {%- unless settings.headings_font.system? and settings.body_font.system? -%}
    <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
  {%- endunless -%}

  {%- render 'head-variables' -%}

  <link rel="preload" as="script" href="{{ 'theme.js' | asset_url }}">
  <link rel="preload" as="style" href="{{ 'theme.css' | asset_url }}">
  {{ 'theme.css' | asset_url | stylesheet_tag }}

	{{ content_for_header }}

  <noscript>
    <link rel="stylesheet" href="{{ 'theme-noscript.css' | asset_url }}">
  </noscript>

  <script>
    const rbi = [];
    const ribSetSize = (img) => {
      if ( img.offsetWidth / img.dataset.ratio < img.offsetHeight ) {
        img.setAttribute('sizes', `${Math.ceil(img.offsetHeight * img.dataset.ratio)}px`);
      } else {
        img.setAttribute('sizes', `${Math.ceil(img.offsetWidth)}px`);
      }
    }
    function debounce(fn, wait) {
      let t;
      return (...args) => {
        clearTimeout(t);
        t = setTimeout(() => fn.apply(this, args), wait);
      };
    }
    window.addEventListener('resize', debounce(()=>{
      for ( let img of rbi ) {
        ribSetSize(img);
      }
    }, 250));
  </script>

  <script>
    const ProductHeaderHelper = productSelector => {
      const originalHeader = document.querySelector(`${productSelector} .product-header`);
      let duplicateHeader = document.createElement('div');
      duplicateHeader.classList = 'product-header product-header--mobile';
      duplicateHeader.innerHTML = document.querySelector(`${productSelector} product-header`).innerHTML;
      duplicateHeader.querySelector('.price-reviews').id = "";
      document.querySelector(`${productSelector}`).prepend(duplicateHeader);
      const headerObserver = new MutationObserver(mutations=>{
        for ( const mutation of mutations ) {
          duplicateHeader.innerHTML = originalHeader.innerHTML;
        }
      });
      headerObserver.observe(originalHeader,{ attributes: false, childList: true, subtree: true })
    }
  </script>

</head>

<body class="template-password no-touchevents quick-buy-disabled 
  {% if settings.thumb_resize == "fit" %} fit-product-grid-images {% endif %}
">

  <script>
    if ('loading' in HTMLImageElement.prototype) {
      document.body.classList.add('loading-support');
    }
  </script>

  <a href="#main" class="visually-hidden skip-to-content">{{ 'general.navigation.skip_to_content' | t }}</a>

  {%- section 'main-password-header' -%}

  <main class="wrapper main-content" id="main" role="main">

    {{ content_for_layout }}

		<div class="site-footer">
			<div class="footer-bottom">
		    <div class="footer-copyright">
		      <span class="site-copyright text-size--smaller">
		      	 {%- capture shopify -%}
					      <a class="shopify-link" href="//shopify.com" rel="nofollow" target="_blank" title="Create your own online store with Shopify" style="border-bottom: 1px solid;">
					        <span class="shopify-name">Shopify</span>
					      </a>
					    {%- endcapture -%}
					    {{ 'password.powered_by_shopify_html' | t: shopify: shopify }}
		      </span>
		    </div>
			</div>
		</div>

  </main>
	
  <script>
    
    window.preloadImages = (element=document)=> {
      let lazyImages = element.querySelectorAll('img.lazy');
      for (let img of lazyImages) {
        if (!img.complete) {
          img.addEventListener('load', lazyImageLoad, false);
        } else if (img.complete) {
          lazyImageLoad({currentTarget: img});
        }
      }
      function lazyImageLoad(e) {
        e.currentTarget.classList.add('lazyloaded');
        if ( e.currentTarget.id && e.currentTarget.id.includes('responsive-background') ) {
          ribSetSize(e.currentTarget)
        }
      }
    }
    window.preloadImages();

    KROWN = {
      settings: {
        shop_money_format: '{{ shop.money_format }}',
        cart_action: "{{ settings.cart_action }}",
        routes: {
          cart_url: "{{ routes.cart_url }}",
          cart_add_url: "{{ routes.cart_add_url }}",
          cart_change_url: "{{ routes.cart_change_url }}",
          predictive_search_url: "{{ routes.predictive_search_url }}",
          product_recommendations_url: "{{ routes.product_recommendations_url }}"
        },
        locales: {
          cart_add_error: `{{ 'cart.add_error' | t }}`,
          cart_general_error: `{{ 'cart.general_error' | t }}`,
          products_add_to_cart_button: `{{ 'product.add_to_cart' | t }}`,
          products_sold_out_variant: `{{ 'product.inventory.sold_out_variant' | t }}`,
          products_unavailable_variant: `{{ 'product.inventory.unavailable_variant' | t }}`,
          products_one_product: `{{ 'product.inventory.one_product' | t }}`,
          products_few_products: `{{ 'product.inventory.few_products' | t }}`,
          products_no_products: `{{ 'product.inventory.no_products' | t }}`,
          products_preorder: `{{ 'product.inventory.preorder' | t }}`,
          product_sku: `{{ 'product.sku' | t }}`,
          product_barcode: `{{ 'product.barcode' | t }}`,
          product_no_reviews: `{{ 'product.no_reviews' | t }}`,
          next: `{{ 'general.accessibility_labels.next' | t }}`,
          prev: `{{ 'general.accessibility_labels.previous' | t }}`
        },
        symbols: {
          arrow: `{%- render 'theme-symbols', icon: 'arrow-long' -%}`,
          zoom_out: `{%- render 'theme-symbols', icon: 'zoom-out' -%}`,
          zoom_in: `{%- render 'theme-symbols', icon: 'zoom-in' -%}`,
          close: `{%- render 'theme-symbols', icon: 'close' -%}`,
          star: `<svg width="18" height="17" viewBox="0 0 18 17" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9 0L11.0206 6.21885H17.5595L12.2694 10.0623L14.2901 16.2812L9 12.4377L3.70993 16.2812L5.73056 10.0623L0.440492 6.21885H6.97937L9 0Z" fill="#262627"/></svg>`,
          toggle_pack: `<svg class="svg symbol symbol--plus" width="12" height="13" viewBox="0 0 12 13" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5 0.5H7V12.5H5V0.5Z" fill="#262627"/><path d="M12 5.5V7.5L0 7.5L1.19209e-07 5.5L12 5.5Z" fill="#262627"/></svg><svg class="svg symbol symbol--minus" width="12" height="13" viewBox="0 0 12 3" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M12 0.5V2.5L0 2.5L1.19209e-07 0.5L12 0.5Z" fill="#262627"/></svg>`
        },
        predictive_search_enabled: "{{ settings.predictive_search_enabled }}"
      }
    }

    if ( 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch ) {
      document.querySelector('body').classList.remove('no-touchevents');
      document.querySelector('body').classList.add('touchevents');
    } 

  </script>

  <script src="{{ 'theme.js' | asset_url }}" defer></script>

  {%- if settings.product_animation contains 'three' -%}
    {%- if settings.product_overlay_txt != 'rgba(0,0,0,0)' -%}
      {% style %}
        @media screen and (min-width: 1025px) {
          .product-item.style--three + .quick-add-to-cart svg path {
            fill: {{ settings.product_overlay_txt }};
            stroke: {{ settings.product_overlay_txt }};
          }
          .product-item.style--three .caption, .product-item.style--three .underline-animation {
            color: {{ settings.product_overlay_txt }} !important;
          }
          .product-item.style--three .underline-animation {
            background-image: linear-gradient(to right, {{ settings.product_overlay_txt }}, {{ settings.product_overlay_txt }});
          }
        }
      {% endstyle %}
    {%- endif -%}
    {%- if settings.product_overlay_bg != 'rgba(0,0,0,0)' -%}
      {% style %}
        @media screen and (min-width: 1025px) {
          .product-item.style--three .caption:before {
            background: {{ settings.product_overlay_bg }};
          }
        }
      {% endstyle %}
    {%- endif -%}
  {%- endif -%}

  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer></script>
  {%- endif -%}

</body>

</html>